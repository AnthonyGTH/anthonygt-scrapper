name: Run Scrapers

on:
  push:
    branches: [ master ]
  schedule:
    # Run every hour (GitHub free tier limitation)
    - cron: "0 * * * *"
  workflow_dispatch:
    inputs:
      force_run:
        description: 'Force run even if recently executed'
        required: false
        default: 'false'
        type: boolean

jobs:
  scrape:
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"
      
      - name: Install Playwright
        run: |
          python -m pip install --upgrade pip
          pip install playwright
          playwright install chromium
          playwright install-deps chromium
      
      - name: Verify Playwright installation
        run: |
          python -c "from playwright.sync_api import sync_playwright; print('Playwright installed successfully')"
      
      - name: Install dependencies
        run: |
          pip install -r scraper/requirements.txt
          pip install -r api/requirements.txt
      
      - name: Set up environment
        run: |
          echo "POSTGRES_HOST=${{ secrets.POSTGRES_HOST }}" >> $GITHUB_ENV
          echo "POSTGRES_PORT=${{ secrets.POSTGRES_PORT }}" >> $GITHUB_ENV
          echo "POSTGRES_DB=${{ secrets.POSTGRES_DB }}" >> $GITHUB_ENV
          echo "POSTGRES_USER=${{ secrets.POSTGRES_USER }}" >> $GITHUB_ENV
          echo "POSTGRES_PASSWORD=${{ secrets.POSTGRES_PASSWORD }}" >> $GITHUB_ENV
          echo "TELEGRAM_BOT_TOKEN=${{ secrets.TELEGRAM_BOT_TOKEN }}" >> $GITHUB_ENV
          echo "TELEGRAM_CHAT_ID=${{ secrets.TELEGRAM_CHAT_ID }}" >> $GITHUB_ENV
          echo "TELEGRAM_CHAT_ID_HIGH=${{ secrets.TELEGRAM_CHAT_ID_HIGH }}" >> $GITHUB_ENV
          echo "TELEGRAM_CHAT_ID_MEDIUM=${{ secrets.TELEGRAM_CHAT_ID_MEDIUM }}" >> $GITHUB_ENV
          echo "OPENAI_API_KEY=${{ secrets.OPENAI_API_KEY }}" >> $GITHUB_ENV
          echo "API_JWT_SECRET=${{ secrets.API_JWT_SECRET }}" >> $GITHUB_ENV
      
      - name: Run multithreaded AI scrapers
        run: |
          cd scraper
          python multithreaded_ai_scraper.py
      
      - name: Notify completion
        if: always()
        run: |
          echo "Scraper execution completed at $(date)"
          echo "Check the logs above for results"